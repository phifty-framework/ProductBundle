// Generated by CoffeeScript 1.6.3
(function() {
  var BaseWidget, ButtonWidget, CheckboxInputWidget, HiddenInputWidget, InputWidget, PasswordInputWidget, Product, RadioInputWidget, SelectWidget, TextInputWidget, propertyItemTemplate, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Product = window.Product;

  BaseWidget = (function() {
    function BaseWidget() {}

    BaseWidget.prototype.bind = function(el) {};

    BaseWidget.prototype.render = function() {
      this.el = CoffeeKup.compile(this.template()).render();
      this.bind(this.el);
      return this.el;
    };

    return BaseWidget;

  })();

  InputWidget = (function(_super) {
    __extends(InputWidget, _super);

    function InputWidget() {
      _ref = InputWidget.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    InputWidget.prototype.template = function() {
      return input({
        "class": this.config["class"],
        name: this.config.name,
        type: this.config.type,
        value: this.config.value
      });
    };

    return InputWidget;

  })(BaseWidget);

  ButtonWidget = (function(_super) {
    __extends(ButtonWidget, _super);

    function ButtonWidget() {
      _ref1 = ButtonWidget.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    ButtonWidget.prototype.contruct = function(config) {
      this.config = config;
      return this.config["class"] = this.config["class"] || "btn";
    };

    ButtonWidget.prototype.template = function() {
      var _this = this;
      return button({
        "class": this.config["class"](function() {
          return _this.config.label;
        })
      });
    };

    return ButtonWidget;

  })(BaseWidget);

  TextInputWidget = (function(_super) {
    __extends(TextInputWidget, _super);

    function TextInputWidget() {
      _ref2 = TextInputWidget.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    TextInputWidget.prototype.construct = function(config) {
      this.config = config;
      TextInputWidget.__super__.construct.call(this, this.config);
      return this.config.type = "text";
    };

    return TextInputWidget;

  })(InputWidget);

  RadioInputWidget = (function(_super) {
    __extends(RadioInputWidget, _super);

    function RadioInputWidget() {
      _ref3 = RadioInputWidget.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    RadioInputWidget.prototype.construct = function(config) {
      this.config = config;
      RadioInputWidget.__super__.construct.call(this, this.config);
      return this.config.type = "radio";
    };

    return RadioInputWidget;

  })(InputWidget);

  CheckboxInputWidget = (function(_super) {
    __extends(CheckboxInputWidget, _super);

    function CheckboxInputWidget() {
      _ref4 = CheckboxInputWidget.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    CheckboxInputWidget.prototype.construct = function(config) {
      this.config = config;
      CheckboxInputWidget.__super__.construct.call(this, this.config);
      return this.config.type = "checkbox";
    };

    return CheckboxInputWidget;

  })(InputWidget);

  PasswordInputWidget = (function(_super) {
    __extends(PasswordInputWidget, _super);

    function PasswordInputWidget() {
      _ref5 = PasswordInputWidget.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    PasswordInputWidget.prototype.construct = function(config) {
      this.config = config;
      PasswordInputWidget.__super__.construct.call(this, this.config);
      return this.config.type = "password";
    };

    return PasswordInputWidget;

  })(InputWidget);

  HiddenInputWidget = (function(_super) {
    __extends(HiddenInputWidget, _super);

    function HiddenInputWidget() {
      _ref6 = HiddenInputWidget.__super__.constructor.apply(this, arguments);
      return _ref6;
    }

    HiddenInputWidget.prototype.construct = function(config) {
      this.config = config;
      HiddenInputWidget.__super__.construct.call(this, this.config);
      return this.config.type = "hidden";
    };

    return HiddenInputWidget;

  })(InputWidget);

  SelectWidget = (function(_super) {
    __extends(SelectWidget, _super);

    function SelectWidget() {
      _ref7 = SelectWidget.__super__.constructor.apply(this, arguments);
      return _ref7;
    }

    SelectWidget.prototype.template = function() {};

    return SelectWidget;

  })(BaseWidget);

  propertyItemTemplate = CoffeeKup.compile(function() {
    return tr(function() {
      td(function() {
        input({
          "class": "record-id",
          name: "properties[" + this.id + "][id]",
          type: "hidden",
          value: this.id
        });
        return input({
          name: "properties[" + this.id + "][name]",
          type: "text",
          value: this.name
        });
      });
      td(function() {
        return input({
          name: "properties[" + this.id + "][value]",
          type: "text",
          size: 60,
          value: this.value
        });
      });
      td(function() {
        return button({
          "data-id": this.id,
          "class": "delete-button"
        }, function() {
          return "刪除";
        });
      });
      return td(function() {
        return div({
          "class": "handle",
          style: " border: 1px solid #aaa; background: #d5d5d5; display: block; padding: 1px 5px; "
        }, function() {
          return span({
            "class": "icon icon-sort"
          });
        });
      });
    });
  });

  window.ProductProperty = {};

  ProductProperty.render = function(data) {
    return $(propertyItemTemplate(data));
  };

  ProductProperty.append = function($container, data) {
    var $table, $tr;
    $table = $container.find('table');
    $tr = $(propertyItemTemplate(data));
    $tr.find('.delete-button').click(function(e) {
      var $selfRow, id;
      if (confirm('確定刪除?')) {
        id = $(this).data('id');
        $selfRow = $(this).parents('tr').get(0);
        runAction('ProductBundle::Action::DeleteProductProperty', {
          id: id
        }, function(resp) {
          return $selfRow.remove();
        });
      }
      return false;
    });
    return $table.find('tbody').append($tr);
  };

  ProductProperty.initEditor = function($container) {
    var $table;
    $table = $container.find('table');
    return $container.find('.add-button').click(function(e) {
      var newName, newValue;
      newName = $container.find('.new-property-name').val();
      newValue = $container.find('.new-property-value').val();
      $container.find('.new-property-name').val("");
      $container.find('.new-property-value').val("");
      runAction('ProductBundle::Action::CreateProductProperty', {
        name: newName,
        value: newValue
      }, function(resp) {
        return ProductProperty.append($container, resp.data);
      });
      return false;
    });
  };

}).call(this);
