// Generated by CoffeeScript 1.6.3
(function() {
  var linkItemTemplate;

  linkItemTemplate = CoffeeKup.compile(function() {
    return tr(function() {
      td(function() {
        input({
          "class": "record-id",
          name: "links[" + this.id + "][id]",
          type: "hidden",
          value: this.id
        });
        return input({
          name: "links[" + this.id + "][name]",
          type: "text",
          value: this.name
        });
      });
      td(function() {
        return input({
          name: "links[" + this.id + "][value]",
          type: "text",
          size: 60,
          value: this.value
        });
      });
      td(function() {
        return button({
          "data-id": this.id,
          "class": "delete-button"
        }, function() {
          return "刪除";
        });
      });
      return td(function() {
        return div({
          "class": "handle",
          style: " border: 1px solid #aaa; background: #d5d5d5; display: block; padding: 1px 5px; "
        }, function() {
          return span({
            "class": "icon icon-sort"
          });
        });
      });
    });
  });

  window.ProductLink = {};

  ProductLink.renderLink = function(data) {
    return $(linkItemTemplate(data));
  };

  Product.appendLink = function($container, data) {
    var $table, $tr;
    $table = $container.find('table');
    $tr = $(linkItemTemplate(data));
    $tr.find('.delete-button').click(function(e) {
      var $selfRow, id;
      if (confirm('確定刪除?')) {
        id = $(this).data('id');
        $selfRow = $(this).parents('tr').get(0);
        runAction('ProductBundle::Action::DeleteProductLink', {
          id: id
        }, function(resp) {
          return $selfRow.remove();
        });
      }
      return false;
    });
    return $table.find('tbody').append($tr);
  };

  ProductLink.initEditor = function($container) {
    var $table;
    $table = $container.find('table');
    return $container.find('.add-button').click(function(e) {
      var newName, newValue;
      newName = $container.find('.new-link-name').val();
      newValue = $container.find('.new-link-value').val();
      $container.find('.new-link-name').val("");
      $container.find('.new-link-value').val("");
      runAction('ProductBundle::Action::CreateProductLink', {
        name: newName,
        value: newValue
      }, function(resp) {
        return Product.appendLink($container, resp.data);
      });
      return false;
    });
  };

}).call(this);
